[{"content":"UPDATED:8-26-2022\nI finally received my Valve Steam Deck. There are lots of cool tidbits out there already so I will likely not be creating any content about it—unless I decide to turn it into a hypervisor or something cool like that!\nHere are a couple of useful resources I have found and used pertaining to the Steam Deck:\nprotondb - Allows you to search games to see if they are compatible with GNU/Linux or Steam Deck. EMU Deck - Does all the hard work of setting up emulation on your Deck. Deck Drive Manager - Copy Steam Games from Your PC to Your Steam Deck SD Card. Required 3rd party software to access EXT4 partitions on Windows. Unfortunately, WSL2 doesn\u0026rsquo;t deal well with removable media at the time I tried to use it. Check My Deck - Allows you to check compatibility of your existing steam library without having to search each title on protondb individually. Get My Deck - Check the status of your Deck order. Based off community sourced information so may not be 100% accurate but it was for me. ShareDeck - Community sourced game and performance settings for Steam Deck. Useful if you want to optimize games for battery life. /r/steamdeck - The main subreddit for all things Steam Deck related. @OnDeck - The offical Steam Deck Twitter Account. IsThereAnyDeal - Site that tracks online stores for deals on games. Steam Deck HQ - Curated game settings, Deck news, tips and trick. ","permalink":"https://blog.kmil.us/posts/steam-deck-resources/","summary":"UPDATED:8-26-2022\nI finally received my Valve Steam Deck. There are lots of cool tidbits out there already so I will likely not be creating any content about it—unless I decide to turn it into a hypervisor or something cool like that!\nHere are a couple of useful resources I have found and used pertaining to the Steam Deck:\nprotondb - Allows you to search games to see if they are compatible with GNU/Linux or Steam Deck.","title":"Useful Steam Deck Resources"},{"content":"With the Steam Deck coming out I find myself wanting to replay some of the Wii U classics (BoTW anyone?). While I don’t condone the use of ROM dump websites, I do understand why one might use them. I will not be going over the ROM dumping process from the Wii U in this post but may cover it in the future.\nOnce a ROM has been dumped from the Wii U it is still encrypted and needs to be decrypted before the game can be played with an emulator.\nDownloads:\ncdecrypt Cemu Extract cdecrypt archive. Create a file keys.txt in the same folder as cdecrypt.exe. Locate a common Wii U key online and paste it into the first line of keys.txt. Optionally, find a Wii U common dev key and paste it into the second line of keys.txt. Run cdecrypt.exe \u0026lt;input folder\u0026gt; \u0026lt;output folder\u0026gt;to decrypt the game. Add the newly decrypted game to cemu. Optional: explore graphics packs in cemu. ","permalink":"https://blog.kmil.us/posts/use-cdcrypt-for-wiiu-games-cemu/","summary":"With the Steam Deck coming out I find myself wanting to replay some of the Wii U classics (BoTW anyone?). While I don’t condone the use of ROM dump websites, I do understand why one might use them. I will not be going over the ROM dumping process from the Wii U in this post but may cover it in the future.\nOnce a ROM has been dumped from the Wii U it is still encrypted and needs to be decrypted before the game can be played with an emulator.","title":"Use cdcrypt to convert Wii U games for Cemu"},{"content":"Admittedly this one is a bit of a hack, but I thought it was kind of fun. ESET Protect has the facility to run commands on remote computers. From what I have found is that on Windows it will not natively run Powershell cmdlets, only the basic cmd type stuff. I know that most of what can be done in Powershell can be done in cmd but in this day and age it just feels wrong. There are obviously many different use cases for this but for my proof of concept I just created a basic script to install VLC player just to see if it would work.\nEssentially what it boils down to is ECHO’ing your Powershell script out to a .PS1 file and then calling that script using powershell.exe. Below is my example script that installs VLC.\nECHO [String]$downloadlink = \u0026#39;https://mirrors.ocf.berkeley.edu/videolan-ftp/vlc/3.0.16/win64/vlc-3.0.16-win64.exe\u0026#39; \u0026gt; %temp%\\Install-VLC.ps1 ECHO [string]$OutFile = \u0026#39;vlc-3.0.16-win64.exe\u0026#39; \u0026gt;\u0026gt; %temp%\\Install-VLC.ps1 ECHO [string]$instargs = \u0026#39;/L=1033 /S\u0026#39; \u0026gt;\u0026gt; %temp%\\Install-VLC.ps1 ECHO $OutPath = $env:TMP \u0026gt;\u0026gt; %temp%\\Install-VLC.ps1 ECHO Invoke-WebRequest -Uri $downloadlink -OutFile $OutPath\\$OutFile -ErrorAction SilentlyContinue \u0026gt;\u0026gt; %temp%\\Install-VLC.ps1 ECHO Start-Process -NoNewWindow -FilePath $OutPath\\$OutFile -ArgumentList $instargs -Wait -ErrorAction SilentlyContinue \u0026gt;\u0026gt; %temp%\\Install-VLC.ps1 %SystemRoot%\\system32\\WindowsPowerShell\\v1.0\\powershell.exe -NoProfile -NoLogo -NonInteractive -ExecutionPolicy Bypass -File %temp%\\Install-VLC.ps1 From the ESET Protect interface click on Tasks, then New, and finally Client Task. For Task Category choose Operating System and for Task select Run Command and then click Continue.\nOn the next page paste your cleverly disguised Powershell script into the Command line to run box.\nFrom there you handle the task like any other on ESET Protect creating a trigger and monitoring from the Tasks section.\n","permalink":"https://blog.kmil.us/posts/run-scripts-from-eset-protect/","summary":"Admittedly this one is a bit of a hack, but I thought it was kind of fun. ESET Protect has the facility to run commands on remote computers. From what I have found is that on Windows it will not natively run Powershell cmdlets, only the basic cmd type stuff. I know that most of what can be done in Powershell can be done in cmd but in this day and age it just feels wrong.","title":"Run Powershell scripts from ESET Protect"},{"content":"Create directories for the ACME challenge to be presented.\nNew-Item \u0026#34;C:\\Program Files\\Apache Software Foundation\\apache-tomcat-9.0.54\\docbase\\.well-known\u0026#34; -ItemType Directory Create a folder to store our certificate files.\nNew-Item \u0026#34;C:\\Program Files\\Apache Software Foundation\\apache-tomcat-9.0.54\\acme-ssl\u0026#34; -ItemType Directory Take a backup of the stock Tomcat configuration file. Copy-Item \u0026#34;C:\\Program Files\\Apache Software Foundation\\apache-tomcat-9.0.54\\conf\\server.xml\u0026#34; \u0026#34;C:\\Program Files\\Apache Software Foundation\\apache-tomcat-9.0.54\\conf\\server.xml.orig.bak\u0026#34;\nAdd the following line the the end of the \u0026lt;Host\u0026gt; section of Tomcat config file: C:\\Program Files\\Apache Software Foundation\\apache-tomcat-9.0.54\\conf\\server.xml\n\u0026lt;Context docBase=\u0026#34;C:\\Program Files\\Apache Software Foundation\\apache-tomcat-9.0.54\\docbase\\.well-known\u0026#34; path=\u0026#34;/.well-known\u0026#34; /\u0026gt; Restart the Tomcat Service\nRestart-Service Tomcat9 Download and install the latest version of Certbot. At this time the Windows client is still in beta.\nAfter Certbot has been installed issue the first certificate, replace protect.contoso.com with your hostname.\ncertbot certonly --key-type=ecdsa --webroot -w \u0026#34;C:\\Program Files\\Apache Software Foundation\\apache-tomcat-9.0.54\\docbase\u0026#34; -d protect.contoso.com The command terminal should indicate whether the cert was issues successfully, if errors occurect check the certbot logs. The default location for certbot logs is C:\\Certbot\\log. The newly minted live certs can be found at C:\\Certbot\\live.\nNext copy the live cert.pem, chain.pem, and privkey.pem to the C:\\Program Files\\Apache Software Foundation\\apache-tomcat-9.0.54\\acme-ssl directory created earlier. Remember to change the domain name in the path from protect.contoso.com to the hostname used in the certbot cert request.\nCopy-Item \u0026#34;C:\\Certbot\\live\\protect.contoso.com\\cert.pem\u0026#34; \u0026#34;C:\\Program Files\\Apache Software Foundation\\apache-tomcat-9.0.54\\acme-ssl\\cert.pem\u0026#34; -Force Copy-Item \u0026#34;C:\\Certbot\\live\\protect.contoso.com\\privkey.pem\u0026#34; \u0026#34;C:\\Program Files\\Apache Software Foundation\\apache-tomcat-9.0.54\\acme-ssl\\privkey.pem\u0026#34; -Force Copy-Item \u0026#34;C:\\Certbot\\live\\protect.contoso.com\\chain.pem\u0026#34; \u0026#34;C:\\Program Files\\Apache Software Foundation\\apache-tomcat-9.0.54\\acme-ssl\\chain.pem\u0026#34; -Force Open the C:\\Program Files\\Apache Software Foundation\\apache-tomcat-9.0.54\\conf\\server.xml configuration file and comment out or remove the \u0026lt;Connector\u0026gt; line that begins with \u0026lt;Connector server=\u0026quot;OtherWebServer\u0026quot; port=\u0026quot;443\u0026quot;... and add connector statements below.\n\u0026lt;Connector server=\u0026#34;OtherWebServer\u0026#34; port=\u0026#34;443\u0026#34; protocol=\u0026#34;org.apache.coyote.http11.Http11NioProtocol\u0026#34; maxThreads=\u0026#34;150\u0026#34; SSLEnabled=\u0026#34;true\u0026#34; secure=\u0026#34;true\u0026#34; scheme=\u0026#34;https\u0026#34;\u0026gt; \u0026lt;SSLHostConfig protocols=\u0026#34;TLSv1.2,TLSv1.3\u0026#34; honorCipherOrder=\u0026#34;true\u0026#34; clientAuth=\u0026#34;false\u0026#34; ciphers=\u0026#34;TLS_AES_256_GCM_SHA384, TLS_CHACHA20_POLY1305_SHA256, TLS_AES_128_GCM_SHA256, TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384, TLS_DHE_RSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256, TLS_DHE_RSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256, TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\u0026#34;\u0026gt; \u0026lt;Certificate certificateFile=\u0026#34;acme-ssl\\cert.pem\u0026#34; certificateKeyFile=\u0026#34;acme-ssl\\privkey.pem\u0026#34; certificateChainFile=\u0026#34;acme-ssl\\chain.pem\u0026#34; /\u0026gt; \u0026lt;/SSLHostConfig\u0026gt; \u0026lt;/Connector\u0026gt; Here is the full and final server.xml file for Tomcat.\nVerify that everything is working and, if so, make another backup of the Tomcat server.xml in case a future update overwrites the customized configuration file.\nCopy-Item \u0026#34;C:\\Program Files\\Apache Software Foundation\\apache-tomcat-9.0.54\\conf\\server.xml\u0026#34; \u0026#34;C:\\Program Files\\Apache Software Foundation\\apache-tomcat-9.0.54\\conf\\server.xml.prod.bak\u0026#34; Certbot should have already setup its own scheduled task to check and renew certificates automatically. I have created the script below to check the local cerbot store and update Tomcat if the live certificates have changed. Add the script below to c:\\scripts\\certchk.ps1 and add a daily job in Task Scheduler to run it automatically. change protect.contoso.com to the domain for your environment.\nAll Done!\nSSL Labs Grade ","permalink":"https://blog.kmil.us/posts/eset-protect-letsencrypt/","summary":"Create directories for the ACME challenge to be presented.\nNew-Item \u0026#34;C:\\Program Files\\Apache Software Foundation\\apache-tomcat-9.0.54\\docbase\\.well-known\u0026#34; -ItemType Directory Create a folder to store our certificate files.\nNew-Item \u0026#34;C:\\Program Files\\Apache Software Foundation\\apache-tomcat-9.0.54\\acme-ssl\u0026#34; -ItemType Directory Take a backup of the stock Tomcat configuration file. Copy-Item \u0026#34;C:\\Program Files\\Apache Software Foundation\\apache-tomcat-9.0.54\\conf\\server.xml\u0026#34; \u0026#34;C:\\Program Files\\Apache Software Foundation\\apache-tomcat-9.0.54\\conf\\server.xml.orig.bak\u0026#34;\nAdd the following line the the end of the \u0026lt;Host\u0026gt; section of Tomcat config file: C:\\Program Files\\Apache Software Foundation\\apache-tomcat-9.0.54\\conf\\server.xml\n\u0026lt;Context docBase=\u0026#34;C:\\Program Files\\Apache Software Foundation\\apache-tomcat-9.","title":"Setup ESET Protect Server to use LetsEncrypt Certificates"},{"content":"One would think working in IT would make me a patient person. Today I found myself tired of waiting for the ConnectWise Automate agents to be deployed for a customer. Normally I push these agent-type installs using group policy which is fine in most cases.\nWhile there are probably better deployment methods outside of what ConnectWise recommends I figured I\u0026rsquo;d put together a down and dirty script to speed things up for this particular install.\nFor this particular install the customer has an Active Directory domain so I will be enumerating computer objects from AD and then using PSRemoting to execute commands on the client computers.\nSimply edit the AD query on line 2 to suit the needs of your environment and populate the CW Agent download link on line 8.\nDisclaimer: Use this code at your own risk.\nAfter writing this script I got curios to see what others have been doing and found the links below to interesting scripts.\nThe Lazy Administrator LabTech Consulting GitHub ","permalink":"https://blog.kmil.us/posts/connectwise-agent-install-script/","summary":"One would think working in IT would make me a patient person. Today I found myself tired of waiting for the ConnectWise Automate agents to be deployed for a customer. Normally I push these agent-type installs using group policy which is fine in most cases.\nWhile there are probably better deployment methods outside of what ConnectWise recommends I figured I\u0026rsquo;d put together a down and dirty script to speed things up for this particular install.","title":"ConnectWise Agent Install Script"}]